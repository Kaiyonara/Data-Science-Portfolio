print ("Hey all you budding data scientists!")
Print ("Hey!")
print Hey!
print ("Hey all you budding data scientists!")
print ("Hey!")
print("Hallo Welt!")
print("Hola mundo!")
source("C:/Users/kaiba/OneDrive/Desktop/Data-Science-Program/Data-Science-Program/DS102-R/L2/hello_world.R")
source("C:/Users/kaiba/OneDrive/Desktop/Data-Science-Program/Data-Science-Program/DS102-R/L2/hello_world.R")
#Am I crazy for thinking I can do this?
help("datasets")
valid_variable_name <- 721
valid.variable.name = 720
719 -> ValidVariableName
valid_variable_name
valid.variable.name
ValidVariableName
source("C:/Users/kaiba/OneDrive/Desktop/Data-Science-Program/Data-Science-Program/DS102-R/L2/hello_world.R")
x <- 3
y = 7
11 -> z
Bison <- "Can run up to 30 MPH."
Bison
print Bison
print (Bison)
Bison2 ,- "and can also throw people up to 20 feet in the air."
Bison2 <- "and can also throw people up to 20 feet in the air."
Bison <- "Can run up to 30 MPH"
print (Bison,Bison2)
paste(Bison,Bison2)
2 + 1
Two = 2
One = 1
Two + One
Two + One
Two + One
Two - One
Two / One
Two ^ One
2 + 1 * 7
(2 + 1) * 7
x = 169.0
mu = 169.0
sigma = 4.9
(x - mu) / sigma
mu = 159.0
x = 169.0
mu = 159.0
sigma = 4.9
(x - mu) / sigma
r = 2.54
pi * r ^ 2
st_dev = .834
st_dev ^ 2
x = 169.0
mu = 154.8
sigma = 4.9
(x - mu) / sigma
x = 159.0
x = 159.0
mu = 154.8
sigma = 4.9
(x - mu) / sigma
Clean_kitchen(Cameron, dishes = TRUE)
sqrt(26)
z_score = 2.2
pnorm(z_score)
t <- sqrt(16)
t
w = 2
sqrt(w)
help(z_score)
TspToTbsp = function(TsTb){
(TsTb / 3)
}
TspToTbsp (9)
f.to.c <- function(TF){
(TF - 32) * 5 / 9
}
source("~/.active-rstudio-document")
temp.in.c
sleep_hours = C(7,4,8,9,5,11)
sleep_hours <- C(7,4,8,9,5,11)
sleep_hours <- C(7,4,8,9,5,11)
sleep_hours
sleep_hours <- C(7,4,8,9,5,11)
sleep_hours <- c(7,4,8,9,5,11)
sleep_hours2 <- 6:10
sleep_hours3 <- 11:1
for (number in sleep_hours) {
print (number)
}
for (number in sleep_hours) {
cat (number)
}
for (number in sleep_hours) {
cat (number, "\n")
for (number in sleep_hours) {
cat (number, "\n")
}
for (number in sleep_hours) {
cat (number, "")
}
for (number in sleep_hours) {
cat (number)
}
for (number in sleep_hours) {
cat (number, "\n")
}
for (number in sleep_hours) {
cat (number, "\n")
}
for (number in sleep_hours) {
print (number)
}
for(number in sleep_hours){cat(number, "\n")}
for(number in sleep_hours){cat(number, "\n")}
for (number in sleep_hours){
print(number)
}
for (number in sleep_hours){
print(number)
}
sleep_hours
sleep_hours <- c(7,4,8,9,5,11)
sleep_hours
for(number in sleep_hours){
print(number)
}
for(number in sleep_hours){
cat(number)
}
for(number in sleep_hours){
cat(number, "\n")
}
Tsp <- c(1, 5, 2, 11, 12)
for(number in Tsp){
Tbsp <- TsptoTbsp(number)
cat(number, "Tsp is", Tbsp, "Tbsp", "\n")
for(number in Tsp){
Tbsp <- TsptoTbsp(number)
cat(number, "Tsp is", Tbsp, "Tbsp", "\n")
}
Tsp <- c(1, 5, 2, 11, 12)
for(number in Tsp){
Tbsp <- TsptoTbsp(number)
cat(number, "Tsp is", Tbsp, "Tbsp", "\n")
}
source("C:/Users/kaiba/OneDrive/Desktop/Data-Science-Program/Data-Science-Program/DS102-R/L8 - The For Loop - Variables, Functions and For Loops/The For Loop Example.R")
for(number in Tsp){
Tbsp <- TsptoTbsp(number)
cat(number, "Tsp is", Tbsp, "Tbsp", "\n")
}
Tsp <- c(1, 5, 2, 11, 12)
for(number in Tsp){
Tbsp <- TsptoTbsp(number)
cat(number, "Tsp is", Tbsp, "Tbsp", "\n")
}
TsptoTbsp <- function(TsTb){
(TsTb / 3)
}
Tsp <- c(1, 5, 2, 11, 12)
for(number in Tsp){
Tbsp <- TsptoTbsp(number)
cat(number, "Tsp is", Tbsp, "Tbsp", "\n")
}
for(number in Tsp){
Tbsp <- TsptoTbsp(number)
cat(number, "Tsp is", Tbsp, "Tbsp", "\n")
}
Tsp <- c(1, 5, 2, 11, 12)
for(number in Tsp){
Tbsp <- TsptoTbsp(number)
cat(number, "Tsp is", Tbsp, "Tbsp", "\n")
Tsp <- c(1, 5, 2, 11, 12)
for(number in Tsp){
Tbsp <- TsptoTbsp(number)
cat(number, "Tsp is", Tbsp, "Tbsp", "\n")
}
Tsp <- c(1, 5, 2, 11, 12)
TsptoTbsp <- function(TsTb){
(TsTb / 3)
}
Tsp <- c(1, 5, 2, 11, 12)
for(number in Tsp){
Tbsp <- TsptoTbsp(number)
cat(number, "Tsp is", Tbsp, "Tbsp", "\n")
}
f.to.c <- function(TF) {
(TF - 32) * 5 / 9
}
f.temps <- c(-40, 0, 32, 100, 212, 400)
for (f in f.temps) {
c <-f.to.c(f)
cat(f, " ", c, "\n")
}
diam <- function(Width) {
(2 / 2.54 * ((Width / (0.92 * (4/3) * pi))) ^ (1/3))
}
sph.weight.grams <- c(0.96,1.51,2.17,3.85,4.45,6.02)
diam <- function(Width) {
(2 / 2.54 * ((Width / (0.92 * (4/3) * pi))) ^ (1/3))
}
sph.weight.grams <- c(0.96,1.51,2.17,3.85,4.45,6.02)
for (g in sph.weight.grams) {
c <-diam(g)
cat(g, "is the diameter of the sphere with a weight of", sph.weight.grams, ".")
}
diam <- function(Width) {
(2 / 2.54 * ((Width / (0.92 * (4/3) * pi))) ^ (1/3))
}
sph.weight.grams <- c(0.96,1.51,2.17,3.85,4.45,6.02)
for (g in sph.weight.grams) {
c <-diam(g)
cat(g, "is the diameter of the sphere with a weight of", sph.weight.grams, ".", "\n")
}
diam <- function(Width) {
(2 / 2.54 * ((Width / (0.92 * (4/3) * pi))) ^ (1/3))
}
sph.weight.grams <- c(0.96,1.51,2.17,3.85,4.45,6.02)
for (g in sph.weight.grams) {
c <-diam(g)
cat(Width, "is the diameter of the sphere with a weight of", sph.weight.grams, ".", "\n")
}
diam <- function(Width) {
(2 / 2.54 * ((Width / (0.92 * (4/3) * pi))) ^ (1/3))
}
sph.weight.grams <- c(0.96,1.51,2.17,3.85,4.45,6.02)
for (g in sph.weight.grams) {
c <-diam(g)
cat(diam, "is the diameter of the sphere with a weight of", sph.weight.grams, ".", "\n")
}
Width <- c(0.96,1.51,2.17,3.85,4.45,6.02)
diam <- function(Width) {
(2 / 2.54 * ((Width / (0.92 * (4/3) * pi))) ^ (1/3))
}
Width <- c(0.96,1.51,2.17,3.85,4.45,6.02)
for (w in Width) {
c <-diam(w)
cat(diam, "is the diameter of the sphere with a weight of", Width, ".", "\n")
}
diam <- function(Width) {
(2 / 2.54 * ((Width / (0.92 * (4/3) * pi))) ^ (1/3))
}
Width <- c(0.96,1.51,2.17,3.85,4.45,6.02)
for (w in Width) {
c <-diam(w)
print (diam, "is the diameter of the sphere with a weight of", Width, ".", "\n")
}
sph.weight.grams <- c(0.96,1.51,2.17,3.85,4.45,6.02
diam <- function(Width) {
(2 / 2.54 * ((Width / (0.92 * (4/3) * pi))) ^ (1/3))
}
sph.weight.grams <- c(0.96,1.51,2.17,3.85,4.45,6.02)
for (g in sph.weight.grams) {
c <-diam(g)
cat (diam, "\n")
}
diam <- function(Width) {
(2 / 2.54 * ((Width / (0.92 * (4/3) * pi))) ^ (1/3))
}
sph.weight.grams <- c(0.96,1.51,2.17,3.85,4.45,6.02)
for (g in sph.weight.grams) {
c <-diam(g)
cat (diam," ",c, "\n")
}
diam <- function(Width) {
(2 / 2.54 * ((Width / (0.92 * (4/3) * pi))) ^ (1/3))
}
sph.weight.grams <- c(0.96,1.51,2.17,3.85,4.45,6.02)
for (g in sph.weight.grams) {
c <-diam(g)
cat (diam," ",g, "\n")
}
diam <- function(Width) {
(2 / 2.54 * ((Width / (0.92 * (4/3) * pi))) ^ (1/3))
}
sph.weight.grams <- c(0.96,1.51,2.17,3.85,4.45,6.02)
for (g in sph.weight.grams) {
c <-diam(g)
cat (g," ",c, "\n")
}
diam <- function(Width) {
(2 / 2.54 * ((Width / (0.92 * (4/3) * pi))) ^ (1/3))
}
sph.weight.grams <- c(0.96,1.51,2.17,3.85,4.45,6.02)
for (g in sph.weight.grams) {
c <-diam(g)
cat ("For a weight of", g,"the diameter of the ice sphere is ",c, "\n")
}
diam <- function(Width) {
(2 / 2.54 * ((Width / (0.92 * (4/3) * pi))) ^ (1/3))
}
sph.weight.grams <- c(0.96,1.51,2.17,3.85,4.45,6.02)
for (g in sph.weight.grams) {
c <-diam(g)
cat ("For a weight of", g,"the diameter of the ice sphere is",c,".", "\n")
}
diam <- function(Width) {
(2 / 2.54 * ((Width / (0.92 * (4/3) * pi))) ^ (1/3))
}
sph.weight.grams <- c(0.96,1.51,2.17,3.85,4.45,6.02)
for (g in sph.weight.grams) {
c <-diam(g)
cat ("For a weight of", g,"grams, the diameter of the ice sphere is",c,".", "\n")
}
diam <- function(Width) {
(2 / 2.54 * ((Width / (0.92 * (4/3) * pi))) ^ (1/3))
}
sph.weight.grams <- c(0.96,1.51,2.17,3.85,4.45,6.02)
for (g in sph.weight.grams) {
c <-diam(g)
cat ("For a weight of", g,"grams, the diameter of the ice sphere is",c,".", "\n")
}
diam <- function(Width) {
(2 / 2.54 * ((Width / (0.92 * (4/3) * pi))) ^ (1/3))
}
sph.weight.grams <- c(0.96,1.51,2.17,3.85,4.45,6.02)
for (g in sph.weight.grams) {
c <-diam(g)
cat ("For a weight of", g,"grams, the diameter of the ice sphere is",c,"inches.", "\n")
}
diam <- function(Width) {
(2 / 2.54 * ((Width / (0.92 * (4/3) * pi))) ^ (1/3))
}
sph.weight.grams <- c(0.96,1.51,2.17,3.85,4.45,6.02)
for (g in sph.weight.grams) {
c <-diam(g)
cat ("For a weight of", g,"grams, the diameter of the ice sphere is",c,"inches.", "\n")
}
for (g in sph.weight.grams) {
c <-diam(g)
cat ("For a weight of", g,"grams, the diameter of the ice sphere is",c,"inches.", "\n")
}
rivers_boxplot <- ggplot(rr, aes(x = " ", y = rivers))
library(ggplot2)
rivers_boxplot <- ggplot(rr, aes(x = " ", y = rivers))
rr <- data.frame(rivers)
rivers_boxplot <- ggplot(rr, aes(x = " ", y = rivers))
rivers_boxplot <- ggplot(rr, aes(x = " ", y = rivers))
rivers_boxplot + geom_boxplot() + xlab(" ")
Snowman_Name <- c ("Frosty", "Frostette", "Jack Frost", "Jackie Frost", "Coal Eye")
Accessory <- c("Top Hat", "Scarf", "Coal Buttons", "Twig Arms", "Carrot Nose")
Location <- C("South Dakota", "North Dakota", "Colorado", "Minnesota", "Alaska")
Location <- c("South Dakota", "North Dakota", "Colorado", "Minnesota", "Alaska")
Body_Sections <- c(3,4,3,2)
Snowmen <- data.frame(Snowman_Name, Accessory, Location, Body_Sections)
View (Snowmen)
Snowmen <- data.frame(Snowman_Name, Accessory, Location, Body_Sections)
Snowmen <- data.frame(Snowmen_Name, Accessory, Location, Body_Sections)
Snowmen <- data.frame(Snowman_Name, Accessory, Location, Body_Sections)
Snowmen <- data.frame(Snowman_Name, Accessory, Location, Body_Sections)
View (Snowmen)
Snowmen <- data.frame(Snowman_Name, Accessory, Location, Body_Sections)
Snowmen <- data.frame(Snowman_Name, Accessory, Location, Body_Sections)
Snowman_Name <- c ("Frosty", "Frostette", "Jack Frost", "Jackie Frost", "Coal Eye")
Accessory <- c("Top Hat", "Scarf", "Coal Buttons", "Twig Arms", "Carrot Nose")
Location <- c("South Dakota", "North Dakota", "Colorado", "Minnesota", "Alaska")
Body_Sections <- c(3,4,3,2)
Snowmen <- data.frame(Snowman_Name, Accessory, Location, Body_Sections)
View (Snowmen)
Snowmen <- data.frame(Snowman_Name, Accessory, Location, Body_Sections)
Body_Sections <- c(3,4,2,3,2)
Snowmen <- data.frame(Snowman_Name, Accessory, Location, Body_Sections)
Snowman_Name <- c ("Frosty", "Frostette", "Jack Frost", "Jackie Frost", "Coal Eye")
Accessory <- c("Top Hat", "Scarf", "Coal Buttons", "Twig Arms", "Carrot Nose")
Location <- c("South Dakota", "North Dakota", "Colorado", "Minnesota", "Alaska")
Body_Sections <- c(3,4,2,3,2)
Snowmen <- data.frame(Snowman_Name, Accessory, Location, Body_Sections)
View (Snowmen)
head(Snowmen)
tail(Snowmen)
Snowmen
Snowmen$Accessory
#If you only one to look at the accessory for Jack Frost:
Snowmen [3,2]
#If you want to add more columns:
Snowmen$Gender <- c("Male", "Female", "Male", "Female", "Male")
Snowmen$Gender <- c("Male", "Female", "Male", "Female", "Male")
#If you want to add more columns:
Snowmen$Gender <- c("Male", "Female", "Male", "Female", "Male")
#If you want to add more columns later:
Snowmen$Gender <- c("Male", "Female", "Male", "Female", "Male")
Name <- c("Bob", "Nancy", "Cyrus", "Jackie")
Age <- c(36, 31, 26, 34)
Dominant_Hand <- c("Right", "Right", "Left", "Right")
friends <- data.frame(Name, Age, Dominant_Hand)
friends
View(friends)
friends$Shoe_Size <- c(10,8,14,9)
View (ToothGrowth)
mtcars
View(mtcars)
help(mtcars)
#To import a CSV file:
my_pets <- read.csv("PetsCSV.csv")
setwd("C:/Users/kaiba/OneDrive/Desktop/Data-Science-Program/Data-Science-Program/DS102-R/L6 - Data Frames")
#To import a CSV file:
my_pets <- read.csv("PetsCSV.csv")
#To import a CSV file:
my_pets <- read.csv("PetsCSV.csv")
PetsCSV <- read.csv("C:/Users/kaiba/OneDrive/Desktop/Data-Science-Program/Data-Science-Program/DS102-R/L6 - Data Frames/PetsCSV.csv", stringsAsFactors=TRUE)
View(PetsCSV)
#To import an Excel spreadsheet:
library(readxl)
library(readxl)
my_petsExcel <- read_excel("Pets.xlsx")
library(readxl)
my_petsExcel <- read_excel("Pets.xlsx")
library(readxl)
Pets <- read_excel("Pets.xlsx")
View(Pets)
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
#Using the student.mat data frame:
student.mat
View(student.mat)
student.mat
datasets
library(help = "datasets")
install.packages("dplyr")
install.packages("dplyr")
